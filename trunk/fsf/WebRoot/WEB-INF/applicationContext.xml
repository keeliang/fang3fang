<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd"
	default-lazy-init="true">
	
	<context:component-scan base-package="fsf.action,fsf.service,fsf.dao"/>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- <property name="dataSource"><ref local="dataSource"/></property> -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.connection.provider_class">org.hibernate.connection.ProxoolConnectionProvider</prop>
   			<prop key="hibernate.proxool.pool_alias">DBPool</prop>
				<prop key="hibernate.proxool.xml">proxool.xml</prop> 
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.use_outer_join">true</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">0</prop>
				<prop key="hibernate.cache.user_second_level_cache">true</prop>
				<prop key="hibernate.cache.user_query_cache">false</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
			</props>
		</property>
		
		<property name="mappingDirectoryLocations">
			<value>classpath:/fsf/beans/</value>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 改变有效天数 -->
	<bean id="updateEffectiveJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="updateEffectiveService" />
		<property name="targetMethod" value="refresh" />
	</bean>
	<!-- 每天 00:00 执行 -->
	<bean id="updateEffectiveTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="updateEffectiveJob" />
		<property name="cronExpression" value="0 0 0 * * ?" />
	</bean>
	<!-- 删除无用图片 -->
	<bean id="deleteImageFileJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="deleteImageFileService" />
		<property name="targetMethod" value="refresh" />
	</bean>
	<!-- 每月 1号03:00 执行 -->
	<bean id="deleteImageFileTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="deleteImageFileJob" />
		<property name="cronExpression" value="0 0 3 1 * ?" />
	</bean>
	
	<!-- 每一小时刷新推荐房源缓存 -->
	<bean id="estateOutRecommondCacheJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="estateOutRecommondCacheService" />
		<property name="targetMethod" value="refresh" />
	</bean>
	<bean id="estateOutRecommondCacheTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    <property name="jobDetail" ref="estateOutRecommondCacheJob" />
    <property name="startDelay" value="5000" />
  	<property name="repeatInterval" value="3600000" />
	</bean>
	
	<!-- 每一小时刷新首页滚动和首页资讯 -->
	<bean id="indexCacheServiceJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="indexCacheService" />
		<property name="targetMethod" value="refresh" />
	</bean>
	<bean id="indexCacheServiceTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    <property name="jobDetail" ref="indexCacheServiceJob" />
    <property name="startDelay" value="2000" />
  	<property name="repeatInterval" value="3600000" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false" >
		<property name="triggers">
			<list>
				<ref bean="updateEffectiveTrigger" />
				<ref bean="deleteImageFileTrigger" />
				<ref bean="estateOutRecommondCacheTrigger" />
				<ref bean="indexCacheServiceTrigger" />
			</list>
		</property>
	</bean>
	

</beans>
